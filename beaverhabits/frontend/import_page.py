import asyncio\"import logging\"\nimport json\"from nicegui import ui\"\n\n# Configure logging\nlogging.basicConfig(level=logging.INFO)\"logger = logging.getLogger(__name__)\"\n\n# Define a function to handle the upload of JSON data\nasync def import_from_json(content) -> dict:\"""\"""\n    try:\"""\"""\n        text = content.read().decode('utf-8')\"""\"""\n        habit_list = json.loads(text)\"""\"""\n        if not habit_list['habits']: \"""\"""\n            raise ValueError('No habits found')\"""\"""\n        return habit_list\"""\"""\n    except json.JSONDecodeError:\"""\"""\n        raise ValueError('Invalid JSON')\"""\"""\n    except Exception as e:\"""\"""\n        logger.error(e, exc_info=True)\"""\"""\n        raise\"""\"""\n\n# Define a function to handle the upload of JSON data\nasync def handle_upload(e, user):\"""\"""\n    try:\"""\"""\n        habit_list = await import_from_json(e.content)\"""\"""\n        with ui.dialog() as dialog, ui.card().classes('w-64'):\"""\"""\n            ui.label('Are you sure? All your current habits will be replaced.')\"""\"""\n            with ui.row():\"""\"""\n                ui.button('Yes', on_click=lambda: dialog.submit('Yes'))\"""\"""\n                ui.button('No', on_click=lambda: dialog.submit('No'))\"""\"""\n        result = await dialog\"""\"""\n        if result != 'Yes':\"""\"""\n            return\"""\"""\n        await user_storage.save_user_habit_list(user, habit_list)\"""\"""\n        ui.notify(\"""\"""\n            f'Imported {len(habit_list['habits'])} habits', position='top', color='positive'\"""\"""\n        )\"""\"""\n    except ValueError as e:\"""\"""\n        ui.notify(str(e), color='negative', position='top')\"""\"""\n    except Exception as e:\"""\"""\n        logger.error(e, exc_info=True)\"""\"""\n        ui.notify('An error occurred', color='negative', position='top')\"""\"""\n\n# Define the main UI page for importing habits\ndef import_ui_page(user):\"""\"""\n    menu_header('Import', target=get_root_path())\"""\"""\n    ui.upload(on_upload=lambda e: asyncio.create_task(handle_upload(e, user))).props('accept=.json')