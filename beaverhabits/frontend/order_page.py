from nicegui import ui\\nfrom beaverhabits.frontend import components\\nfrom beaverhabits.frontend.components import (\\n    HabitAddButton, HabitDeleteButton, HabitNameInput, HabitStarCheckbox\\n) from beaverhabits.frontend.layout import layout\\nfrom beaverhabits.logging import logger\\nfrom beaverhabits.storage.storage import HabitList\\n\\nasync def item_drop(e, habit_list: HabitList):\\n    # Move element\\n    elements = ui.context.client.elements\\n    dragged = elements[int(e.args['id'][1:])]\\n    dragged.move(target_index=e.args['new_index'])\\n\\n    # Update habit order\\n    assert dragged.parent_slot is not None\\n    habits = [\\n        x.habit\\n        for x in dragged.parent_slot.children\\n        if isinstance(x, components.HabitOrderCard) and x.habit\\n    ]\\n    habit_list.order = [str(x.id) for x in habits]\\n    logger.info(f'New order: {habits}')\\n\\n@ui.refreshable\\ndef add_ui(habit_list: HabitList):\\n    with ui.column().classes('sortable').classes('gap-3'):\\n        for item in habit_list.habits:\\n            with components.HabitOrderCard(item):\\n                with ui.grid(columns=12, rows=1).classes('gap-0 items-center'):\\n                    name = HabitNameInput(item)\\n                    name.classes('col-span-3 col-3').props('borderless')\\n\\n                    ui.space().classes('col-span-7')\\n\\n                    star = HabitStarCheckbox(item, add_ui.refresh)\\n                    star.classes('col-span-1')\\n\\n                    delete = HabitDeleteButton(item, habit_list, add_ui.refresh)\\n                    delete.classes('col-span-1')\\n\\n@ui.refreshable\\ndef order_page_ui(habit_list: HabitList):\\n    with layout():\\n        with ui.column().classes('w-full pl-1 items-center gap-3'):\\n            add_ui(habit_list)\\n\\n            with components.HabitOrderCard():\\n                with ui.grid(columns=12, rows=1).classes('gap-0 items-center'):\\n                    add = HabitAddButton(habit_list, add_ui.refresh)\\n                    add.classes('col-span-12').props('borderless')\\n\\n    ui.add_body_html(\\n        r'''\\n        <script type='module'>\\n        import '/statics/libs/sortable.min.js';\\n        document.addEventListener('DOMContentLoaded', () => {\\n            Sortable.create(document.querySelector('.sortable'), {\\n                animation: 150,\\n                ghostClass: 'opacity-50',\\n                onEnd: (evt) => emitEvent('item_drop', {id: evt.item.id, new_index: evt.newIndex }),\\n            });\\n        });\\n        </script>\\n    '''\\n    )\\n    ui.on('item_drop', lambda e: item_drop(e, habit_list))